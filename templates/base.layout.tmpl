{{define "base"}}
<!doctype html>
<html lang="en">

<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>My nice page</title>
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
		integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker.min.css">
	<link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
	<link rel="stylesheet" type="text/css" href="/static/css/styles.css">
</head>

<body>
	<nav class="navbar navbar-expand-lg bg-dark navbar-dark">
		<div class="container-fluid">
			<a class="navbar-brand" href="#">Navbar</a>
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse"
				data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
				aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="collapse navbar-collapse" id="navbarSupportedContent">
				<ul class="navbar-nav me-auto mb-2 mb-lg-0">
					<li class="nav-item">
						<a class="nav-link active" aria-current="page" href="/">Home</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="/about">About</a>
					</li>
					<li class="nav-item dropdown">
						<a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
							aria-expanded="false">
							Rooms
						</a>
						<ul class="dropdown-menu">
							<li><a class="dropdown-item" href="/generals-quarters">General's Quarters</a></li>
							<li><a class="dropdown-item" href="/majors-suite">Major's Suite</a></li>
						</ul>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="/search-availability" aria-disabled="true">Book Now</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="/contact" aria-disabled="true">Contact</a>
					</li>
				</ul>
			</div>
		</div>
	</nav>

	{{block "content" .}}

	{{end}}

	<div class="row my-footer">
		<div class="col">
			Left
		</div>
		<div class="col">
			Middle
		</div>
		<div class="col">
			Right
		</div>
	</div>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
		integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
		crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>
	<script src="https://unpkg.com/notie"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

	{{block "js" .}}

	{{end}}

	<script>
		let alert = Prompt();
		// Example starter JavaScript for disabling form submissions if there are invalid fields
		(() => {
			'use strict'

			// Fetch all the forms we want to apply custom Bootstrap validation styles to
			const forms = document.querySelectorAll('.needs-validation')

			// Loop over them and prevent submission
			Array.from(forms).forEach(form => {
				form.addEventListener('submit', event => {
					if (!form.checkValidity()) {
						event.preventDefault()
						event.stopPropagation()
					}

					form.classList.add('was-validated')
				}, false)
			})
		})()

		function notify(msg, msgType) {
			notie.alert({
				type: msgType,
				text: msg
			})
		}

		function notifyModal(title, text, icon, confirmButtonText) {
			Swal.fire({
				title: title,
				html: text,
				icon: icon,
				confirmButtonText: confirmButtonText
			})
		}

		function Prompt() {
			const toast = function (c) {
				const {
					msg = "",
					icon = "success",
					position = "top-end"
				} = c;
				const Toast = Swal.mixin({
					toast: true,
					title: msg,
					position: position,
					icon: icon,
					showConfirmButton: false,
					timer: 3000,
					timerProgressBar: true,
					didOpen: (toast) => {
						toast.addEventListener('mouseenter', Swal.stopTimer)
						toast.addEventListener('mouseleave', Swal.resumeTimer)
					}
				})

				Toast.fire({})
			}
			const success = function (c) {
				const {
					msg = "",
					title = "",
					footer = "",
				} = c;
				Swal.fire({
					icon: 'success',
					title: title,
					text: msg,
					footer: footer
				})
			}
			const error = function (c) {
				const {
					msg = "",
					title = "",
					footer = "",
				} = c;
				Swal.fire({
					icon: 'error',
					title: title,
					text: msg,
					footer: footer
				})
			}

			const custom = async function (c) {
				const {
					msg = "",
					title = "",
				} = c;

				const { value: result } = await Swal.fire({
					title: title,
					html: msg,
					backdrop: false,
					showCancelButton: true,
					willOpen: () => {
						if (c.willOpen !== undefined) {
							c.willOpen();
						}
					},
					focusConfirm: false,
					preConfirm: () => {
						if (c.preConfirm !== undefined) {
							c.preConfirm();
						}
					},
					didOpen: () => {
						if (c.didOpen !== undefined) {
							c.didOpen();
						}
					}
				})

				if (result) {
					if (result.dismiss !== Swal.DismissReason.cancel) {
						if (result !== "") {
							if (c.callback !== undefined) {
								c.callback(result)
							}
						} else {
							c.callback(false)
						}
					} else {
						c.callback(false)
					}
				}

			}

			return {
				toast: toast,
				success: success,
				error: error,
				custom: custom
			}
		}
	</script>
</body>

</html>
{{end}}